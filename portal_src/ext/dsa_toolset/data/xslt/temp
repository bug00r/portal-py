 <resource xmlns="http://www.wxwindows.org/wxxrc" version="2.3.0.1">

    <xsl:comment>
        <xsl:template match="/">
            <root>
                <x1fromxslt>
                    <xsl:for-each select="$xml1//*">
                        <node><xsl:value-of select="name()" /></node>
                    </xsl:for-each>
                    <xsl:value-of disable-output-escaping="yes" select="$x1" />
                </x1fromxslt>
                <x2fromxslt>
                    <xsl:for-each select="$xml2//*">
                        <node><xsl:value-of select="name()" /> </node>
                    </xsl:for-each>
                    <xsl:value-of disable-output-escaping="yes" select="$x2" />
                </x2fromxslt>
            </root>
        </xsl:template>
    </xsl:comment>



    <xsl:stylesheet version="1.0"
                   xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                   xmlns:exslt="http://exslt.org/common"
                   xmlns:utils="http://bugsutils.de/">
    <xsl:output method="xml" omit-xml-declaration="yes"/>


    <xsl:param name="x1" />
    <xsl:param name="x2" />

    <xsl:variable name="xml1" select="utils:strtodoc($x1)" />
    <xsl:variable name="xml2" select="utils:strtodoc($x2)" />

    <xsl:template match="@*|node()">
        <xsl:copy>
            <xsl:apply-templates select="@*|node()"/>
        </xsl:copy>
    </xsl:template>

    <xsl:template match="//object[@name = charlist]" >
        <xsl:copy>
            <xsl:apply-templates select="@*|node()"/>
            <content>
                <item>Test1</item>
                <item>Test2</item>
                <item>Test3</item>
            </content>
        </xsl:copy>
    </xsl:template>

</xsl:stylesheet>


                      <xsl:template match="//e" >
                            <xsl:if test="parent::object/attribute::a = 11">
                                <xsl:copy>
                                <xsl:apply-templates select="@*|node()"/>
                                <content>
                                    <item>Test1</item>
                                    <item>Test2</item>
                                    <item>Test3</item>
                                </content>
                            </xsl:copy>
                            </xsl:if>
                       </xsl:template>